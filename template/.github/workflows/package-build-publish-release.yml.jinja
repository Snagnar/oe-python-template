name: "Build package, publish to PyPI, create GitHub release"

on:
  push:
    tags:
      - "v*.*.*"


jobs:
  package_build_publish_release:
    environment: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Install dev tools
        run: |
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y curl jq xsltproc gnupg2 trivy

      - name: Generate release notes
        uses: orhun/git-cliff-action@4a4a951bc43fafe41cd2348d181853f52356bee7 # v4.4.2
        id: git-cliff
        with:
          config: pyproject.toml
          args: --verbose --latest --strip header
        env:
          OUTPUT: RELEASE_NOTES.md
          GITHUB_REPO: {% raw %}${{ github.repository }}{% endraw %}

      - name: Print the release notes
        run: cat "{% raw %}${{ steps.git-cliff.outputs.changelog }}{% endraw %}"

      - name: Install uv
        uses: astral-sh/setup-uv@f94ec6bedd8674c4426838e6b50417d36b6ab231 # v5.3.1
        with:
          version: "0.6.3"
          cache-dependency-glob: uv.lock
          enable-cache: true

      - name: Build distribution into dist/
        run: uv build

{% if pypi_enabled %}
      - name: Publish distribution to Python Package Index at pypi.org
        run: uv publish -t {% raw %}${{ secrets.UV_PUBLISH_TOKEN }}{% endraw %}
{% endif %}

      - name: Have audit checks publish to reports/ for auditing
        run: uv run nox -s audit

      - name: Create GitHub release
        env:
          GITHUB_TOKEN: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
        run: |
          gh release create {% raw %}${{ github.ref_name }} ./dist/* ./reports/* --notes-file ${{ steps.git-cliff.outputs.changelog }}{% endraw %}

      - name: Allow other workflows to trigger on release
        env:
          GITHUB_TOKEN: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
        run: |
          gh api repos/{{ github_repository_owner }}/{{ github_repository_name }}/dispatches \
            -f event_type=release_created_programatically
